# --- Agent Profile Draft 9: Explicit Config ---
version: "agent-1.1"

environment:
  SMTP_SERVER: "smtp.example.com"
  SENDER_EMAIL: "reporter@example.com"

defines:
  variables:
    - max_report_length: 1000
    - default_recipient: "admin@example.com"
    - repo_context: "$REPO_PATH"
  tools:
    # ReportGenerator:
    #   name: "generate_report"
    #   description: "Generates a report based on input data. Params: {'data': object}"
    #   type: "internal_function" # Example
    EmailSender:
      name: "send_email"
      description: "Sends an email. Params: {'to': string, 'subject': string, 'body': string}"
      type: "script" # Example
      runtime: "python"
      path: "./scripts/utils/send_email.py"

name: "ReportingAgent"
description: "Generates and sends reports based on processed data and specific directives."

system_prompt: |
  You are the Reporting Agent. Your main function is to generate reports using the 'generate_report' tool based on input data ($(input.data)), adhering to the current directive's format requirements. If the directive includes sending, use the 'send_email' tool, defaulting to $(variables.default_recipient). Report length should not exceed $(variables.max_report_length) characters. Use the standard JSON output schema.

capabilities:
  tools:
    - "ReportGenerator"
    - "EmailSender"

iteration_cap: 6


extra_prompts:
  - "Ensure reports are formatted according to the directive format."
  - "Confirm recipient address before sending email."
  - "Keep reports concise and factual."

# tasks:
#   - "Receive data and directive."
#   - "Validate input data structure."
#   - "Generate report content using 'generate_report'."
#   - "Check report length against $(variables.max_report_length)."
#   - "If directive requires sending, use 'send_email'."
#   - "Provide final status response."

directive:
  type: "REPORT"
  description: "Generate a weekly sales summary report and email it."
  format: "Markdown format with sections for Total Sales, Top Products, Key Changes. Email subject: Weekly Sales Summary"

schema: |
  # (LLM Output Schema v0.3)
  { ... }
example: |
  # (Example LLM Output JSON for generating report)
  {
    "status": "REQUIRES_ACTION",
    "thoughts": [
      {"type": "PLAN", "content": "Generate report using provided data."},
      {"type": "OBSERVATION", "content": "Directive requires Markdown format."}
    ],
    "actions": [{
      "action": "generate_report",
      "type": "internal_function",
      "params": { "data": "$(state.sales_data)" }
    }],
    "final_response": null
  }
